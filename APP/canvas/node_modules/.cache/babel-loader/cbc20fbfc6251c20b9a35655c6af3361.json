{"ast":null,"code":"import { useGlobalObjectEventListener } from './useGlobalObjectEventListener';\n/**\n *  useDocumentEventListener hook\n *\n *  A react hook to an event listener to the document\n *\n * @param {string} eventName The event to track\n * @param {Function} callback The callback to be called on event\n * @param {object} conditions The options to be passed to the event listener\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n * @returns {undefined}\n */\n\nfunction useDocumentEventListener(eventName, callback, listenerOptions, isLayoutEffect) {\n  if (listenerOptions === void 0) {\n    listenerOptions = {};\n  }\n\n  if (isLayoutEffect === void 0) {\n    isLayoutEffect = false;\n  }\n\n  if (typeof document !== 'undefined') {\n    useGlobalObjectEventListener(document, eventName, callback, listenerOptions, true, isLayoutEffect);\n  } else {\n    console.warn(\"useDocumentEventListener can't attach an event listener as document is undefined.\");\n  }\n}\n\nexport { useDocumentEventListener };","map":{"version":3,"sources":["D:/react/productwebsite/APP/canvas/node_modules/rooks/dist/esm/hooks/useDocumentEventListener.js"],"names":["useGlobalObjectEventListener","useDocumentEventListener","eventName","callback","listenerOptions","isLayoutEffect","document","console","warn"],"mappings":"AAAA,SAASA,4BAAT,QAA6C,gCAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,eAAvD,EAAwEC,cAAxE,EAAwF;AACpF,MAAID,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAAEA,IAAAA,eAAe,GAAG,EAAlB;AAAuB;;AACzD,MAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;AAAEA,IAAAA,cAAc,GAAG,KAAjB;AAAyB;;AAC1D,MAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjCN,IAAAA,4BAA4B,CAACM,QAAD,EAAWJ,SAAX,EAAsBC,QAAtB,EAAgCC,eAAhC,EAAiD,IAAjD,EAAuDC,cAAvD,CAA5B;AACH,GAFD,MAGK;AACDE,IAAAA,OAAO,CAACC,IAAR,CAAa,mFAAb;AACH;AACJ;;AACD,SAASP,wBAAT","sourcesContent":["import { useGlobalObjectEventListener } from './useGlobalObjectEventListener';\n/**\n *  useDocumentEventListener hook\n *\n *  A react hook to an event listener to the document\n *\n * @param {string} eventName The event to track\n * @param {Function} callback The callback to be called on event\n * @param {object} conditions The options to be passed to the event listener\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n * @returns {undefined}\n */\nfunction useDocumentEventListener(eventName, callback, listenerOptions, isLayoutEffect) {\n    if (listenerOptions === void 0) { listenerOptions = {}; }\n    if (isLayoutEffect === void 0) { isLayoutEffect = false; }\n    if (typeof document !== 'undefined') {\n        useGlobalObjectEventListener(document, eventName, callback, listenerOptions, true, isLayoutEffect);\n    }\n    else {\n        console.warn(\"useDocumentEventListener can't attach an event listener as document is undefined.\");\n    }\n}\nexport { useDocumentEventListener };\n"]},"metadata":{},"sourceType":"module"}