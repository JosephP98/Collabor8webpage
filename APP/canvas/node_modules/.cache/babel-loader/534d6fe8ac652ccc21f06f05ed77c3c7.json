{"ast":null,"code":"import { useCallback, useState } from \"react\";\n/**\n * useSelect hook\n * Helps easily select a value from a list of values\n *\n * @param list List of values to select a value from\n * @param [initialIndex=0] Initial index which is selected\n * @returns handler\n */\n\nfunction useSelect(list, initialIndex) {\n  if (initialIndex === void 0) {\n    initialIndex = 0;\n  }\n\n  var _a = useState(initialIndex),\n      selectedIndex = _a[0],\n      setSelectedIndex = _a[1];\n\n  var setItem = useCallback(function (item) {\n    setSelectedIndex(list.indexOf(item));\n  }, [list]);\n  return {\n    index: selectedIndex,\n    item: list[selectedIndex],\n    setIndex: setSelectedIndex,\n    setItem: setItem\n  };\n}\n\nexport { useSelect };","map":{"version":3,"sources":["D:/react/productwebsite/APP/canvas/node_modules/rooks/dist/esm/hooks/useSelect.js"],"names":["useCallback","useState","useSelect","list","initialIndex","_a","selectedIndex","setSelectedIndex","setItem","item","indexOf","index","setIndex"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,YAAzB,EAAuC;AACnC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,CAAf;AAAmB;;AAClD,MAAIC,EAAE,GAAGJ,QAAQ,CAACG,YAAD,CAAjB;AAAA,MAAiCE,aAAa,GAAGD,EAAE,CAAC,CAAD,CAAnD;AAAA,MAAwDE,gBAAgB,GAAGF,EAAE,CAAC,CAAD,CAA7E;;AACA,MAAIG,OAAO,GAAGR,WAAW,CAAC,UAAUS,IAAV,EAAgB;AACtCF,IAAAA,gBAAgB,CAACJ,IAAI,CAACO,OAAL,CAAaD,IAAb,CAAD,CAAhB;AACH,GAFwB,EAEtB,CAACN,IAAD,CAFsB,CAAzB;AAGA,SAAO;AACHQ,IAAAA,KAAK,EAAEL,aADJ;AAEHG,IAAAA,IAAI,EAAEN,IAAI,CAACG,aAAD,CAFP;AAGHM,IAAAA,QAAQ,EAAEL,gBAHP;AAIHC,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAMH;;AACD,SAASN,SAAT","sourcesContent":["import { useCallback, useState } from \"react\";\n/**\n * useSelect hook\n * Helps easily select a value from a list of values\n *\n * @param list List of values to select a value from\n * @param [initialIndex=0] Initial index which is selected\n * @returns handler\n */\nfunction useSelect(list, initialIndex) {\n    if (initialIndex === void 0) { initialIndex = 0; }\n    var _a = useState(initialIndex), selectedIndex = _a[0], setSelectedIndex = _a[1];\n    var setItem = useCallback(function (item) {\n        setSelectedIndex(list.indexOf(item));\n    }, [list]);\n    return {\n        index: selectedIndex,\n        item: list[selectedIndex],\n        setIndex: setSelectedIndex,\n        setItem: setItem,\n    };\n}\nexport { useSelect };\n"]},"metadata":{},"sourceType":"module"}