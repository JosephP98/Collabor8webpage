{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { useDidMount } from \"./useDidMount\";\nimport { useUpdateEffect } from \"./useUpdateEffect\";\nimport { useWillUnmount } from \"./useWillUnmount\";\n/**\n * useLifecycleLogger hook\n * logs parameters as component transitions through lifecycles\n *\n * @param componentName Name of the component\n * @param rest\n */\n\nvar useLifecycleLogger = function (componentName) {\n  if (componentName === void 0) {\n    componentName = \"Component\";\n  }\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  useDidMount(function () {\n    console.log.apply(console, __spreadArray([\"\".concat(componentName, \" mounted\")], otherArgs, false));\n    return function () {\n      return console.log(\"\".concat(componentName, \" unmounted\"));\n    };\n  });\n  useUpdateEffect(function () {\n    console.log.apply(console, __spreadArray([\"\".concat(componentName, \" updated\")], otherArgs, false));\n  });\n  useWillUnmount(function () {\n    console.log(\"\".concat(componentName, \" unmounted\"));\n  });\n};\n\nexport { useLifecycleLogger };","map":{"version":3,"sources":["D:/react/productwebsite/APP/canvas/node_modules/rooks/dist/esm/hooks/useLifecycleLogger.js"],"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","useDidMount","useUpdateEffect","useWillUnmount","useLifecycleLogger","componentName","otherArgs","_i","console","log","apply"],"mappings":"AAAA,IAAIA,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;AAC1E,MAAIA,IAAI,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAjC,EAAoC,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,IAAI,CAACG,MAApB,EAA4BG,EAAjC,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AACjF,QAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAP,CAAV,EAAwB;AACpB,UAAI,CAACM,EAAL,EAASA,EAAE,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BV,IAA3B,EAAiC,CAAjC,EAAoCI,CAApC,CAAL;AACTE,MAAAA,EAAE,CAACF,CAAD,CAAF,GAAQJ,IAAI,CAACI,CAAD,CAAZ;AACH;AACJ;AACD,SAAOL,EAAE,CAACY,MAAH,CAAUL,EAAE,IAAIC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BV,IAA3B,CAAhB,CAAP;AACH,CARD;;AASA,SAASY,WAAT,QAA4B,eAA5B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,aAAV,EAAyB;AAC9C,MAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAG,WAAhB;AAA8B;;AAC9D,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGhB,SAAS,CAACC,MAAhC,EAAwCe,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,SAAS,CAACC,EAAE,GAAG,CAAN,CAAT,GAAoBhB,SAAS,CAACgB,EAAD,CAA7B;AACH;;AACDN,EAAAA,WAAW,CAAC,YAAY;AACpBO,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAkBF,OAAlB,EAA2BrB,aAAa,CAAC,CAAC,GAAGa,MAAH,CAAUK,aAAV,EAAyB,UAAzB,CAAD,CAAD,EAAyCC,SAAzC,EAAoD,KAApD,CAAxC;AACA,WAAO,YAAY;AAAE,aAAOE,OAAO,CAACC,GAAR,CAAY,GAAGT,MAAH,CAAUK,aAAV,EAAyB,YAAzB,CAAZ,CAAP;AAA6D,KAAlF;AACH,GAHU,CAAX;AAIAH,EAAAA,eAAe,CAAC,YAAY;AACxBM,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAkBF,OAAlB,EAA2BrB,aAAa,CAAC,CAAC,GAAGa,MAAH,CAAUK,aAAV,EAAyB,UAAzB,CAAD,CAAD,EAAyCC,SAAzC,EAAoD,KAApD,CAAxC;AACH,GAFc,CAAf;AAGAH,EAAAA,cAAc,CAAC,YAAY;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGT,MAAH,CAAUK,aAAV,EAAyB,YAAzB,CAAZ;AACH,GAFa,CAAd;AAGH,CAhBD;;AAiBA,SAASD,kBAAT","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useDidMount } from \"./useDidMount\";\nimport { useUpdateEffect } from \"./useUpdateEffect\";\nimport { useWillUnmount } from \"./useWillUnmount\";\n/**\n * useLifecycleLogger hook\n * logs parameters as component transitions through lifecycles\n *\n * @param componentName Name of the component\n * @param rest\n */\nvar useLifecycleLogger = function (componentName) {\n    if (componentName === void 0) { componentName = \"Component\"; }\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    useDidMount(function () {\n        console.log.apply(console, __spreadArray([\"\".concat(componentName, \" mounted\")], otherArgs, false));\n        return function () { return console.log(\"\".concat(componentName, \" unmounted\")); };\n    });\n    useUpdateEffect(function () {\n        console.log.apply(console, __spreadArray([\"\".concat(componentName, \" updated\")], otherArgs, false));\n    });\n    useWillUnmount(function () {\n        console.log(\"\".concat(componentName, \" unmounted\"));\n    });\n};\nexport { useLifecycleLogger };\n"]},"metadata":{},"sourceType":"module"}