{"ast":null,"code":"import { useState, useEffect } from 'react';\n/**\n *\n * @returns {boolean} Is navigator online\n */\n\nfunction getIsOnline() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return navigator.onLine;\n}\n/**\n * useOnline hook\n *\n * Returns true if navigator is online, false if not.\n *\n * @returns {boolean} The value of navigator.onLine\n */\n\n\nfunction useOnline() {\n  var _a = useState(function () {\n    return getIsOnline();\n  }),\n      online = _a[0],\n      changeOnline = _a[1];\n\n  function setOffline() {\n    changeOnline(false);\n  }\n\n  function setOnline() {\n    changeOnline(true);\n  } // we only needs this to be set on mount\n  // hence []\n\n\n  useEffect(function () {\n    window.addEventListener('online', setOnline);\n    window.addEventListener('offline', setOffline);\n    return function () {\n      window.removeEventListener('online', setOnline);\n      window.removeEventListener('offline', setOffline);\n    };\n  }, []);\n  return online;\n}\n\nexport { useOnline };","map":{"version":3,"sources":["D:/react/productwebsite/APP/canvas/node_modules/rooks/dist/esm/hooks/useOnline.js"],"names":["useState","useEffect","getIsOnline","window","navigator","onLine","useOnline","_a","online","changeOnline","setOffline","setOnline","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,GAAuB;AACnB,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAO,IAAP;AACH;;AACD,SAAOC,SAAS,CAACC,MAAjB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,GAAqB;AACjB,MAAIC,EAAE,GAAGP,QAAQ,CAAC,YAAY;AAAE,WAAOE,WAAW,EAAlB;AAAuB,GAAtC,CAAjB;AAAA,MAA0DM,MAAM,GAAGD,EAAE,CAAC,CAAD,CAArE;AAAA,MAA0EE,YAAY,GAAGF,EAAE,CAAC,CAAD,CAA3F;;AACA,WAASG,UAAT,GAAsB;AAClBD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACD,WAASE,SAAT,GAAqB;AACjBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAPgB,CAQjB;AACA;;;AACAR,EAAAA,SAAS,CAAC,YAAY;AAClBE,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,SAAlC;AACAR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,SAAxB,EAAmCF,UAAnC;AACA,WAAO,YAAY;AACfP,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,SAArC;AACAR,MAAAA,MAAM,CAACU,mBAAP,CAA2B,SAA3B,EAAsCH,UAAtC;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOF,MAAP;AACH;;AACD,SAASF,SAAT","sourcesContent":["import { useState, useEffect } from 'react';\n/**\n *\n * @returns {boolean} Is navigator online\n */\nfunction getIsOnline() {\n    if (typeof window === 'undefined') {\n        return null;\n    }\n    return navigator.onLine;\n}\n/**\n * useOnline hook\n *\n * Returns true if navigator is online, false if not.\n *\n * @returns {boolean} The value of navigator.onLine\n */\nfunction useOnline() {\n    var _a = useState(function () { return getIsOnline(); }), online = _a[0], changeOnline = _a[1];\n    function setOffline() {\n        changeOnline(false);\n    }\n    function setOnline() {\n        changeOnline(true);\n    }\n    // we only needs this to be set on mount\n    // hence []\n    useEffect(function () {\n        window.addEventListener('online', setOnline);\n        window.addEventListener('offline', setOffline);\n        return function () {\n            window.removeEventListener('online', setOnline);\n            window.removeEventListener('offline', setOffline);\n        };\n    }, []);\n    return online;\n}\nexport { useOnline };\n"]},"metadata":{},"sourceType":"module"}