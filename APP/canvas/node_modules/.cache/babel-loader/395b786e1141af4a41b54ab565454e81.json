{"ast":null,"code":"/* eslint-disable id-length */\n\n/**\n *  Inspired from https://github.com/Swizec/useDimensions\n\n **/\nimport { useState, useCallback, useLayoutEffect } from \"react\";\nimport { useOnWindowResize } from \"./useOnWindowResize\";\nimport { useOnWindowScroll } from \"./useOnWindowScroll\";\n\nvar getDimensionObject = function (node) {\n  var rect = node.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width,\n    x: rect.left,\n    y: rect.top\n  };\n};\n\nexport var useDimensionsRef = function (_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.updateOnScroll,\n      updateOnScroll = _c === void 0 ? true : _c,\n      _d = _b.updateOnResize,\n      updateOnResize = _d === void 0 ? true : _d;\n\n  var _e = useState(null),\n      dimensions = _e[0],\n      setDimensions = _e[1];\n\n  var _f = useState(null),\n      node = _f[0],\n      setNode = _f[1];\n\n  var ref = useCallback(function (nodeFromCallback) {\n    setNode(nodeFromCallback);\n  }, []);\n  var measure = useCallback(function () {\n    window.requestAnimationFrame(function () {\n      if (node) {\n        setDimensions(getDimensionObject(node));\n      }\n    });\n  }, [node]);\n  useLayoutEffect(function () {\n    measure();\n  }, [measure]);\n  useOnWindowResize(function () {\n    measure();\n  }, updateOnResize, true);\n  useOnWindowScroll(function () {\n    measure();\n  }, updateOnScroll, true);\n  return [ref, dimensions, node];\n};","map":{"version":3,"sources":["D:/react/productwebsite/APP/canvas/node_modules/rooks/dist/esm/hooks/useDimensionsRef.js"],"names":["useState","useCallback","useLayoutEffect","useOnWindowResize","useOnWindowScroll","getDimensionObject","node","rect","getBoundingClientRect","bottom","height","left","right","top","width","x","y","useDimensionsRef","_a","_b","_c","updateOnScroll","_d","updateOnResize","_e","dimensions","setDimensions","_f","setNode","ref","nodeFromCallback","measure","window","requestAnimationFrame"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,eAAhC,QAAuD,OAAvD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,IAAV,EAAgB;AACrC,MAAIC,IAAI,GAAGD,IAAI,CAACE,qBAAL,EAAX;AACA,SAAO;AACHC,IAAAA,MAAM,EAAEF,IAAI,CAACE,MADV;AAEHC,IAAAA,MAAM,EAAEH,IAAI,CAACG,MAFV;AAGHC,IAAAA,IAAI,EAAEJ,IAAI,CAACI,IAHR;AAIHC,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAJT;AAKHC,IAAAA,GAAG,EAAEN,IAAI,CAACM,GALP;AAMHC,IAAAA,KAAK,EAAEP,IAAI,CAACO,KANT;AAOHC,IAAAA,CAAC,EAAER,IAAI,CAACI,IAPL;AAQHK,IAAAA,CAAC,EAAET,IAAI,CAACM;AARL,GAAP;AAUH,CAZD;;AAaA,OAAO,IAAII,gBAAgB,GAAG,UAAUC,EAAV,EAAc;AACxC,MAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;AAAA,MAAkCE,EAAE,GAAGD,EAAE,CAACE,cAA1C;AAAA,MAA0DA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAlG;AAAA,MAAsGE,EAAE,GAAGH,EAAE,CAACI,cAA9G;AAAA,MAA8HA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAtK;;AACA,MAAIE,EAAE,GAAGxB,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyByB,UAAU,GAAGD,EAAE,CAAC,CAAD,CAAxC;AAAA,MAA6CE,aAAa,GAAGF,EAAE,CAAC,CAAD,CAA/D;;AACA,MAAIG,EAAE,GAAG3B,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyBM,IAAI,GAAGqB,EAAE,CAAC,CAAD,CAAlC;AAAA,MAAuCC,OAAO,GAAGD,EAAE,CAAC,CAAD,CAAnD;;AACA,MAAIE,GAAG,GAAG5B,WAAW,CAAC,UAAU6B,gBAAV,EAA4B;AAC9CF,IAAAA,OAAO,CAACE,gBAAD,CAAP;AACH,GAFoB,EAElB,EAFkB,CAArB;AAGA,MAAIC,OAAO,GAAG9B,WAAW,CAAC,YAAY;AAClC+B,IAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAY;AACrC,UAAI3B,IAAJ,EAAU;AACNoB,QAAAA,aAAa,CAACrB,kBAAkB,CAACC,IAAD,CAAnB,CAAb;AACH;AACJ,KAJD;AAKH,GANwB,EAMtB,CAACA,IAAD,CANsB,CAAzB;AAOAJ,EAAAA,eAAe,CAAC,YAAY;AACxB6B,IAAAA,OAAO;AACV,GAFc,EAEZ,CAACA,OAAD,CAFY,CAAf;AAGA5B,EAAAA,iBAAiB,CAAC,YAAY;AAC1B4B,IAAAA,OAAO;AACV,GAFgB,EAEdR,cAFc,EAEE,IAFF,CAAjB;AAGAnB,EAAAA,iBAAiB,CAAC,YAAY;AAC1B2B,IAAAA,OAAO;AACV,GAFgB,EAEdV,cAFc,EAEE,IAFF,CAAjB;AAGA,SAAO,CAACQ,GAAD,EAAMJ,UAAN,EAAkBnB,IAAlB,CAAP;AACH,CAxBM","sourcesContent":["/* eslint-disable id-length */\n/**\n *  Inspired from https://github.com/Swizec/useDimensions\n\n **/\nimport { useState, useCallback, useLayoutEffect } from \"react\";\nimport { useOnWindowResize } from \"./useOnWindowResize\";\nimport { useOnWindowScroll } from \"./useOnWindowScroll\";\nvar getDimensionObject = function (node) {\n    var rect = node.getBoundingClientRect();\n    return {\n        bottom: rect.bottom,\n        height: rect.height,\n        left: rect.left,\n        right: rect.right,\n        top: rect.top,\n        width: rect.width,\n        x: rect.left,\n        y: rect.top,\n    };\n};\nexport var useDimensionsRef = function (_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.updateOnScroll, updateOnScroll = _c === void 0 ? true : _c, _d = _b.updateOnResize, updateOnResize = _d === void 0 ? true : _d;\n    var _e = useState(null), dimensions = _e[0], setDimensions = _e[1];\n    var _f = useState(null), node = _f[0], setNode = _f[1];\n    var ref = useCallback(function (nodeFromCallback) {\n        setNode(nodeFromCallback);\n    }, []);\n    var measure = useCallback(function () {\n        window.requestAnimationFrame(function () {\n            if (node) {\n                setDimensions(getDimensionObject(node));\n            }\n        });\n    }, [node]);\n    useLayoutEffect(function () {\n        measure();\n    }, [measure]);\n    useOnWindowResize(function () {\n        measure();\n    }, updateOnResize, true);\n    useOnWindowScroll(function () {\n        measure();\n    }, updateOnScroll, true);\n    return [ref, dimensions, node];\n};\n"]},"metadata":{},"sourceType":"module"}