{"ast":null,"code":"import { useEffect, useState } from \"react\";\nvar initialMouseState = {\n  clientX: null,\n  clientY: null,\n  movementX: null,\n  movementY: null,\n  offsetX: null,\n  offsetY: null,\n  pageX: null,\n  pageY: null,\n  screenX: null,\n  screenY: null,\n  x: null,\n  y: null\n};\n\nfunction getMousePositionFromEvent(e) {\n  var screenX = e.screenX,\n      screenY = e.screenY,\n      movementX = e.movementX,\n      movementY = e.movementY,\n      pageX = e.pageX,\n      pageY = e.pageY,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      offsetX = e.offsetX,\n      offsetY = e.offsetY;\n  return {\n    clientX: clientX,\n    clientY: clientY,\n    movementX: movementX,\n    movementY: movementY,\n    offsetX: offsetX,\n    offsetY: offsetY,\n    pageX: pageX,\n    pageY: pageY,\n    screenX: screenX,\n    screenY: screenY,\n    x: screenX,\n    y: screenY\n  };\n}\n/**\n * useMouse hook\n *\n * Retrieves current mouse position and information about the position like\n * screenX, pageX, clientX, movementX, offsetX\n */\n\n\nexport function useMouse() {\n  var _a = useState(initialMouseState),\n      mousePosition = _a[0],\n      setMousePostition = _a[1];\n\n  function updateMousePosition(e) {\n    setMousePostition(getMousePositionFromEvent(e));\n  }\n\n  useEffect(function () {\n    document.addEventListener(\"mousemove\", updateMousePosition);\n    return function () {\n      document.removeEventListener(\"mousemove\", updateMousePosition);\n    };\n  }, []);\n  return mousePosition;\n}","map":{"version":3,"sources":["D:/react/productwebsite/node_modules/rooks/dist/esm/hooks/useMouse.js"],"names":["useEffect","useState","initialMouseState","clientX","clientY","movementX","movementY","offsetX","offsetY","pageX","pageY","screenX","screenY","x","y","getMousePositionFromEvent","e","useMouse","_a","mousePosition","setMousePostition","updateMousePosition","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,IAAIC,iBAAiB,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,SAAS,EAAE,IAHS;AAIpBC,EAAAA,SAAS,EAAE,IAJS;AAKpBC,EAAAA,OAAO,EAAE,IALW;AAMpBC,EAAAA,OAAO,EAAE,IANW;AAOpBC,EAAAA,KAAK,EAAE,IAPa;AAQpBC,EAAAA,KAAK,EAAE,IARa;AASpBC,EAAAA,OAAO,EAAE,IATW;AAUpBC,EAAAA,OAAO,EAAE,IAVW;AAWpBC,EAAAA,CAAC,EAAE,IAXiB;AAYpBC,EAAAA,CAAC,EAAE;AAZiB,CAAxB;;AAcA,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAClC,MAAIL,OAAO,GAAGK,CAAC,CAACL,OAAhB;AAAA,MAAyBC,OAAO,GAAGI,CAAC,CAACJ,OAArC;AAAA,MAA8CP,SAAS,GAAGW,CAAC,CAACX,SAA5D;AAAA,MAAuEC,SAAS,GAAGU,CAAC,CAACV,SAArF;AAAA,MAAgGG,KAAK,GAAGO,CAAC,CAACP,KAA1G;AAAA,MAAiHC,KAAK,GAAGM,CAAC,CAACN,KAA3H;AAAA,MAAkIP,OAAO,GAAGa,CAAC,CAACb,OAA9I;AAAA,MAAuJC,OAAO,GAAGY,CAAC,CAACZ,OAAnK;AAAA,MAA4KG,OAAO,GAAGS,CAAC,CAACT,OAAxL;AAAA,MAAiMC,OAAO,GAAGQ,CAAC,CAACR,OAA7M;AACA,SAAO;AACHL,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,OAAO,EAAEA,OAFN;AAGHC,IAAAA,SAAS,EAAEA,SAHR;AAIHC,IAAAA,SAAS,EAAEA,SAJR;AAKHC,IAAAA,OAAO,EAAEA,OALN;AAMHC,IAAAA,OAAO,EAAEA,OANN;AAOHC,IAAAA,KAAK,EAAEA,KAPJ;AAQHC,IAAAA,KAAK,EAAEA,KARJ;AASHC,IAAAA,OAAO,EAAEA,OATN;AAUHC,IAAAA,OAAO,EAAEA,OAVN;AAWHC,IAAAA,CAAC,EAAEF,OAXA;AAYHG,IAAAA,CAAC,EAAEF;AAZA,GAAP;AAcH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASK,QAAT,GAAoB;AACvB,MAAIC,EAAE,GAAGjB,QAAQ,CAACC,iBAAD,CAAjB;AAAA,MAAsCiB,aAAa,GAAGD,EAAE,CAAC,CAAD,CAAxD;AAAA,MAA6DE,iBAAiB,GAAGF,EAAE,CAAC,CAAD,CAAnF;;AACA,WAASG,mBAAT,CAA6BL,CAA7B,EAAgC;AAC5BI,IAAAA,iBAAiB,CAACL,yBAAyB,CAACC,CAAD,CAA1B,CAAjB;AACH;;AACDhB,EAAAA,SAAS,CAAC,YAAY;AAClBsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCF,mBAAvC;AACA,WAAO,YAAY;AACfC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CH,mBAA1C;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAMA,SAAOF,aAAP;AACH","sourcesContent":["import { useEffect, useState } from \"react\";\nvar initialMouseState = {\n    clientX: null,\n    clientY: null,\n    movementX: null,\n    movementY: null,\n    offsetX: null,\n    offsetY: null,\n    pageX: null,\n    pageY: null,\n    screenX: null,\n    screenY: null,\n    x: null,\n    y: null,\n};\nfunction getMousePositionFromEvent(e) {\n    var screenX = e.screenX, screenY = e.screenY, movementX = e.movementX, movementY = e.movementY, pageX = e.pageX, pageY = e.pageY, clientX = e.clientX, clientY = e.clientY, offsetX = e.offsetX, offsetY = e.offsetY;\n    return {\n        clientX: clientX,\n        clientY: clientY,\n        movementX: movementX,\n        movementY: movementY,\n        offsetX: offsetX,\n        offsetY: offsetY,\n        pageX: pageX,\n        pageY: pageY,\n        screenX: screenX,\n        screenY: screenY,\n        x: screenX,\n        y: screenY,\n    };\n}\n/**\n * useMouse hook\n *\n * Retrieves current mouse position and information about the position like\n * screenX, pageX, clientX, movementX, offsetX\n */\nexport function useMouse() {\n    var _a = useState(initialMouseState), mousePosition = _a[0], setMousePostition = _a[1];\n    function updateMousePosition(e) {\n        setMousePostition(getMousePositionFromEvent(e));\n    }\n    useEffect(function () {\n        document.addEventListener(\"mousemove\", updateMousePosition);\n        return function () {\n            document.removeEventListener(\"mousemove\", updateMousePosition);\n        };\n    }, []);\n    return mousePosition;\n}\n"]},"metadata":{},"sourceType":"module"}