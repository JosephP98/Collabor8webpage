{"ast":null,"code":"import debounce from \"lodash.debounce\";\nimport { useRef, useEffect, useCallback } from \"react\";\n/**\n * Debounce hook\n * Debounces a function\n *\n * @param callback The callback to debounce\n * @param wait The duration to debounce\n * @param options The options object.\n * @param options.leading Specify invoking on the leading edge of the timeout.\n * @param options.maxWait The maximum time func is allowed to be delayed before it’s invoked.\n * @param options.trailing Specify invoking on the trailing edge of the timeout.\n * @returns Returns the new debounced function.\n */\n\nfunction useDebounce(callback, wait, options) {\n  var createDebouncedCallback = useCallback(function (function_) {\n    return debounce(function_, wait, options);\n  }, [wait, options]);\n  var debouncedCallbackRef = useRef(createDebouncedCallback(callback));\n  useEffect(function () {\n    debouncedCallbackRef.current = createDebouncedCallback(callback);\n  }, [callback, createDebouncedCallback]);\n  return debouncedCallbackRef.current;\n}\n\nexport { useDebounce };","map":{"version":3,"sources":["D:/react/productwebsite/node_modules/rooks/dist/esm/hooks/useDebounce.js"],"names":["debounce","useRef","useEffect","useCallback","useDebounce","callback","wait","options","createDebouncedCallback","function_","debouncedCallbackRef","current"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8C;AAC1C,MAAIC,uBAAuB,GAAGL,WAAW,CAAC,UAAUM,SAAV,EAAqB;AAC3D,WAAOT,QAAQ,CAACS,SAAD,EAAYH,IAAZ,EAAkBC,OAAlB,CAAf;AACH,GAFwC,EAEtC,CAACD,IAAD,EAAOC,OAAP,CAFsC,CAAzC;AAGA,MAAIG,oBAAoB,GAAGT,MAAM,CAACO,uBAAuB,CAACH,QAAD,CAAxB,CAAjC;AACAH,EAAAA,SAAS,CAAC,YAAY;AAClBQ,IAAAA,oBAAoB,CAACC,OAArB,GAA+BH,uBAAuB,CAACH,QAAD,CAAtD;AACH,GAFQ,EAEN,CAACA,QAAD,EAAWG,uBAAX,CAFM,CAAT;AAGA,SAAOE,oBAAoB,CAACC,OAA5B;AACH;;AACD,SAASP,WAAT","sourcesContent":["import debounce from \"lodash.debounce\";\nimport { useRef, useEffect, useCallback } from \"react\";\n/**\n * Debounce hook\n * Debounces a function\n *\n * @param callback The callback to debounce\n * @param wait The duration to debounce\n * @param options The options object.\n * @param options.leading Specify invoking on the leading edge of the timeout.\n * @param options.maxWait The maximum time func is allowed to be delayed before it’s invoked.\n * @param options.trailing Specify invoking on the trailing edge of the timeout.\n * @returns Returns the new debounced function.\n */\nfunction useDebounce(callback, wait, options) {\n    var createDebouncedCallback = useCallback(function (function_) {\n        return debounce(function_, wait, options);\n    }, [wait, options]);\n    var debouncedCallbackRef = useRef(createDebouncedCallback(callback));\n    useEffect(function () {\n        debouncedCallbackRef.current = createDebouncedCallback(callback);\n    }, [callback, createDebouncedCallback]);\n    return debouncedCallbackRef.current;\n}\nexport { useDebounce };\n"]},"metadata":{},"sourceType":"module"}